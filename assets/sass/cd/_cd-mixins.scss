//——————————————————————————————————————————————————————————————————————————————
// Common Design: Mixins
//——————————————————————————————————————————————————————————————————————————————

//
// Standard clearfix.
//
@mixin clearfix {
  &:after {
    clear: both;
    content: '';
    display: table;
  }
}

//
// Hide content offscreen accessibly.
//
@mixin hide {
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

//
// Un-hide content.
//
@mixin unhide {
  height: auto;
  margin: 0;
  position: static;
  width: auto;
}


//——————————————————————————————————————————————————————————————————————————————
// Common Design: Breakpoints
//——————————————————————————————————————————————————————————————————————————————
@mixin min-width($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    @media (min-width: #{map-get($grid-breakpoints, $breakpoint)}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$grid-breakpoints` map.";
  }
}

@mixin max-width($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    @media (max-width: #{map-get($grid-breakpoints, $breakpoint)}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$grid-breakpoints` map.";
  }
}


@mixin tablet {
  @include min-width(md) {
    @content;
  }
}

@mixin desktop {
  @include min-width(lg) {
    @content;
  }
}

@mixin xlarge {
  @include min-width(xl) {
    @content;
  }
}


//——————————————————————————————————————————————————————————————————————————————
// Common Design: z-index
//
// syntactic sugar for common z-index values
//
// Usage: @include z(dropdown);
//——————————————————————————————————————————————————————————————————————————————
@mixin z($value: 0) {
  @if map-has-key($zindex, $value) {
    z-index: #{map-get($zindex, $value)};
  }
  @else {
    @warn "`#{$value}` not found in `$zindex` map.";
  }
}


//——————————————————————————————————————————————————————————————————————————————
// Common-Design: font-size
//
// Converts pixel size to rems with pixel fallback.
//
// Requires the $base-font-size variable to be set for the project, this should be the body font size.
//
// Usage:
// @include font-size(14);
//
// Results in (with a $base-font-size of 18):
// font-size: 14px;
// font-size: 0.77777778rem
//
//——————————————————————————————————————————————————————————————————————————————
@mixin font-size($size) {
  @if map-has-key($cd-font-sizes, $size) {
    font-size: map-get($cd-font-sizes, $size) + px;
    // font-size: map-get($cd-font-sizes, $size) / map-get($cd-font-sizes, default) + rem;
  }
  @else {
    @warn "`#{$size}` was not found in `$cd-font-sizes` map.";
  }
}
